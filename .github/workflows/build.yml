name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Test with Maven
        env:
          KEY: ${{ secrets.DECRYPTION_KEY }}
        run: mvn test -Dsecure.key="$KEY"

      - name: Upload MUnit reports
        uses: actions/upload-artifact@v4
        with:
          name: munit-test-reports
          path: target/site/munit/coverage/

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipMunitTests

      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(echo $artifactName1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
          echo "Renamed artifact to $artifactName2"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifacts

      - name: List downloaded files
        run: ls -R

      - name: Deploy to CloudHub 2.0
        env:
          USERNAME: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
          PASSWORD: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
          KEY: ${{ secrets.DECRYPTION_KEY }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          RELEASE_CHANNEL: ${{ secrets.RELEASE_CHANNEL }}
          TARGET: ${{ secrets.TARGET }}
          VCORES: ${{ secrets.VCORES }}
          WORKERS: ${{ secrets.WORKERS }}
          SERVER: ${{ secrets.SERVER }}
        run: |
          artifactName=$(ls *.jar | head -1)
          echo "Deploying artifact: $artifactName"

          # Debug log das vari√°veis
          echo "ENVIRONMENT=$ENVIRONMENT"
          echo "TARGET=$TARGET"
          echo "RELEASE_CHANNEL=$RELEASE_CHANNEL"
          echo "VCORES=$VCORES"
          echo "WORKERS=$WORKERS"
          echo "SERVER=$SERVER"

          mvn deploy --settings .maven/settings.xml \
            -DskipMunitTests -DmuleDeploy \
            -Dmule.artifact="$artifactName" \
            -Dmule.application.name=mulesoftacademy \
            -Danypoint.username="$USERNAME" \
            -Danypoint.password="$PASSWORD" \
            -Ddecryption.key="$KEY" \
            -Dtarget="$TARGET" \
            -Denvironment="$ENVIRONMENT" \
            -Drelease_channel="$RELEASE_CHANNEL" \
            -Dvcores="$VCORES" \
            -Dworkers="$WORKERS" \
            -Dserver="$SERVER"
